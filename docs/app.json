[{"name": "app.py", "content": "from shiny import App, render, ui, reactive\nimport random\nfrom datetime import datetime\n\n# --------------------------------------------\n# Define the Shiny UI layout\n# --------------------------------------------\n\napp_ui = ui.page_fluid(\n  ui.card(\n    \"Antarctic Temperature\",\n    ui.output_text_verbatim(\"output_display_temp\", placeholder=True),\n    ui.output_text_verbatim(\"output_display_time\", placeholder=True),\n  )\n)\n\n# --------------------------------------------\n# Reactive calc with temp and timestamp\n# Function to generate a random temperature between -20 and 35 and current timestamp\n# --------------------------------------------\n\n@reactive.calc()\ndef reactive_calc_generate_data():\n  # Schedule this reactive expression to invalidate every second\n  reactive.invalidate_later(1)  #  every 1 second\n\n  temp = round(random.uniform(-20, 35), 2)\n  timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n  return {\"temp\": temp, \"timestamp\": timestamp}\n\n# --------------------------------------------\n# Shiny Core\u00c2\u00a0\n# Define the server logic to render the UI components based on reactive values\n# ---------------------------------------------\n\ndef server(input, output, session):\n  @output\n  @render.text\n  def output_display_temp():\n    data_dictionary = reactive_calc_generate_data()\n    return f\"{data_dictionary['temp']}\u00c2\u00b0C\"\n\n  @output\n  @render.text\n  def output_display_time():\n    data_dictionary = reactive_calc_generate_data()\n    return f\"{data_dictionary['timestamp']}\"\n\n# --------------------------------------------\n# Create and run the app\n# --------------------------------------------\napp = App(app_ui, server)\n", "type": "text"}]